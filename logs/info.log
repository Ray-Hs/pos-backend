[2025-06-24 13:07:31] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:07:31] [33mwarn[39m: Missing info [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:43:43] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:43:43] [33mwarn[39m: Missing info [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:44:13] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:44:13] [33mwarn[39m: Missing info [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:44:21] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:44:21] [33mwarn[39m: Missing info [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:45:02] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:45:02] [33mwarn[39m: Missing info [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:45:47] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-24 13:45:47] [33mwarn[39m: Missing info [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "password"
    ],
    "message": "Required"
  }
]
[2025-06-25 12:15:12] [32minfo[39m: Filter: 
[2025-06-25 12:15:30] [33mwarn[39m: No Data Found
[2025-06-25 12:15:30] [33mwarn[39m: No Data Found
[2025-06-25 12:15:31] [33mwarn[39m: No Data Found
[2025-06-25 12:15:53] [32minfo[39m: undefined
[2025-06-25 12:16:14] [32minfo[39m: undefined
[2025-06-25 12:19:41] [32minfo[39m: Filter: 
[2025-06-25 12:19:41] [33mwarn[39m: No Data Found
[2025-06-25 12:19:42] [33mwarn[39m: No Data Found
[2025-06-25 12:22:41] [32minfo[39m: undefined
[2025-06-25 12:24:41] [32minfo[39m: Filter: 
[2025-06-25 12:27:52] [32minfo[39m: Filter: 
[2025-06-25 12:30:48] [32minfo[39m: Filter: 
[2025-06-25 12:41:20] [32minfo[39m: undefined
[2025-06-25 12:41:25] [32minfo[39m: Filter: 
[2025-06-25 12:41:46] [32minfo[39m: undefined
[2025-06-25 12:41:51] [32minfo[39m: Filter: 
[2025-06-25 12:41:56] [33mwarn[39m: No Data Found
[2025-06-25 12:41:56] [33mwarn[39m: No Data Found
[2025-06-25 12:41:57] [33mwarn[39m: No Data Found
[2025-06-25 12:47:07] [33mwarn[39m: No Data Found
[2025-06-25 12:47:07] [32minfo[39m: Filter: 
[2025-06-25 12:47:08] [33mwarn[39m: No Data Found
[2025-06-25 12:47:28] [32minfo[39m: undefined
[2025-06-25 12:47:56] [32minfo[39m: Filter: 
[2025-06-25 12:48:04] [32minfo[39m: undefined
[2025-06-25 12:48:15] [32minfo[39m: undefined
[2025-06-25 12:48:20] [32minfo[39m: Filter: 
[2025-06-25 12:48:24] [32minfo[39m: Filter: 
[2025-06-25 12:48:44] [33mwarn[39m: No Data Found
[2025-06-25 12:48:44] [33mwarn[39m: No Data Found
[2025-06-25 12:48:45] [33mwarn[39m: No Data Found
[2025-06-25 12:48:49] [32minfo[39m: undefined
[2025-06-25 12:48:54] [32minfo[39m: undefined
[2025-06-25 12:49:15] [32minfo[39m: Filter: 
[2025-06-25 12:49:15] [33mwarn[39m: No Data Found
[2025-06-25 12:49:16] [33mwarn[39m: No Data Found
[2025-06-25 12:49:32] [33mwarn[39m: No Data Found
[2025-06-25 12:49:32] [33mwarn[39m: No Data Found
[2025-06-25 12:49:33] [33mwarn[39m: No Data Found
[2025-06-25 12:49:39] [32minfo[39m: undefined
[2025-06-25 12:50:00] [32minfo[39m: Filter: 
[2025-06-25 12:57:16] [32minfo[39m: Filter: 
[2025-06-25 12:58:33] [32minfo[39m: Filter: 
[2025-06-25 12:59:45] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packageQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packagePrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemPrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemSellPrice"
    ],
    "message": "Required"
  }
]
[2025-06-25 12:59:45] [33mwarn[39m: Error:  [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packageQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packagePrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemPrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemSellPrice"
    ],
    "message": "Required"
  }
]
[2025-06-25 12:59:47] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packageQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packagePrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemPrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemSellPrice"
    ],
    "message": "Required"
  }
]
[2025-06-25 12:59:47] [33mwarn[39m: Error:  [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packageQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packagePrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemPrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemSellPrice"
    ],
    "message": "Required"
  }
]
[2025-06-25 12:59:49] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packageQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packagePrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemPrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemSellPrice"
    ],
    "message": "Required"
  }
]
[2025-06-25 12:59:49] [33mwarn[39m: Error:  [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packageQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemQty"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "packagePrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemPrice"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "itemSellPrice"
    ],
    "message": "Required"
  }
]
[2025-06-25 13:14:53] [32minfo[39m: Filter: 
[2025-06-25 13:49:04] [32minfo[39m: Filter: 
[2025-06-25 13:49:22] [32minfo[39m: undefined
[2025-06-25 16:08:45] [33mwarn[39m: Brand Not Found
[2025-06-25 16:08:46] [33mwarn[39m: Brand Not Found
[2025-06-25 16:08:48] [33mwarn[39m: Brand Not Found
[2025-06-25 16:09:16] [32minfo[39m: Filter: 
[2025-06-25 16:09:16] [33mwarn[39m: No Data Found
[2025-06-25 16:09:17] [33mwarn[39m: No Data Found
[2025-06-25 16:12:41] [32minfo[39m: Filter: 
[2025-06-25 16:14:22] [33mwarn[39m: Brand Not Found
[2025-06-25 16:14:23] [33mwarn[39m: Brand Not Found
[2025-06-25 16:14:25] [33mwarn[39m: Brand Not Found
[2025-06-25 16:15:27] [33mwarn[39m: No Data Found
[2025-06-25 16:15:27] [33mwarn[39m: No Data Found
[2025-06-25 16:15:28] [33mwarn[39m: No Data Found
[2025-06-25 16:16:19] [32minfo[39m: undefined
[2025-06-25 16:16:57] [32minfo[39m: Filter: 
[2025-06-25 16:17:04] [33mwarn[39m: No Data Found
[2025-06-25 16:17:05] [33mwarn[39m: No Data Found
[2025-06-26 11:40:41] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-26 11:42:53] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-26 11:43:52] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-26 12:16:28] [32minfo[39m: Filter: 
[2025-06-26 12:23:11] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-26 12:23:11] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-26 12:23:43] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-26 12:23:43] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-26 12:24:04] [31merror[39m: Create Supply:  
Invalid `prisma.supply.create()` invocation:


Foreign key constraint violated on the constraint: `supply_companyId_fkey`
[2025-06-26 12:36:36] [31merror[39m: Create Payment Service:  
Invalid `prisma.payment.create()` invocation:


Foreign key constraint violated on the constraint: `Payment_companyDebtId_fkey`
[2025-06-26 14:20:15] [31merror[39m: Create Payment Service:  
Invalid `prisma.payment.create()` invocation:

{
  data: {
    companyId: 1,
    ~~~~~~~~~
    invoiceNumber: "INVC003",
    userId: 1,
    currency: "IQD",
    amount: 6000,
    note: "No Notes",
    companyDebtId: 2,
?   id?: Int,
?   isLatestVersion?: Boolean | Null,
?   paymentDate?: DateTime,
?   createdAt?: DateTime,
?   updatedAt?: DateTime
  }
}

Unknown argument `companyId`. Available options are marked with ?.
[2025-06-26 14:24:33] [32minfo[39m: Excess payment amount: 1000
[2025-06-26 14:26:37] [31merror[39m: Create Payment Service:  All debts are already paid.
[2025-06-26 14:27:44] [31merror[39m: Create Payment Service:  All debts are already paid.
[2025-06-26 14:29:10] [31merror[39m: Create Payment Service:  All debts are already paid.
[2025-06-26 14:30:13] [31merror[39m: Create Payment Service:  All debts are already paid.
[2025-06-26 14:31:21] [31merror[39m: Create Payment Service:  All debts are already paid.
[2025-06-26 14:33:07] [32minfo[39m: Excess payment amount: 9000
[2025-06-26 16:58:49] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:


The column `CompanyDebt.currency` does not exist in the current database.
[2025-06-26 16:58:52] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:


The column `CompanyDebt.currency` does not exist in the current database.
[2025-06-26 17:09:46] [33mwarn[39m: Invalid Amount.
[2025-06-28 10:59:47] [33mwarn[39m: Invalid Amount.
[2025-06-28 11:41:05] [32minfo[39m: Filter: 
[2025-06-28 11:42:18] [33mwarn[39m: No Data Found
[2025-06-28 11:42:19] [33mwarn[39m: No Data Found
[2025-06-28 11:46:16] [32minfo[39m: Filter: 
[2025-06-28 11:54:40] [32minfo[39m: Filter: 
[2025-06-28 11:59:46] [32minfo[39m: Filter: 
[2025-06-28 11:59:59] [33mwarn[39m: No Data Found
[2025-06-28 12:00:00] [33mwarn[39m: No Data Found
[2025-06-28 14:09:33] [32minfo[39m: Filter: 
[2025-06-28 14:09:33] [33mwarn[39m: No Data Found
[2025-06-28 14:09:34] [33mwarn[39m: No Data Found
[2025-06-28 14:34:40] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "items"
    ],
    "message": "Required"
  }
]
[2025-06-28 14:34:40] [33mwarn[39m: Invalid Print Data:  [
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "items"
    ],
    "message": "Required"
  }
]
[2025-06-28 14:36:01] [33mwarn[39m: Brand Not Found
[2025-06-28 14:46:41] [33mwarn[39m: Failed to print logo:  ENOENT: no such file or directory, access 'D:\Programing\WorkFolders\restaurant-pos\backend\https:\avatars.githubusercontent.com\u\127545417?v=4'
[2025-06-28 14:46:57] [33mwarn[39m: Failed to print logo:  ENOENT: no such file or directory, access 'D:\Programing\WorkFolders\restaurant-pos\backend\https:\avatars.githubusercontent.com\u\127545417?v=4'
[2025-06-28 14:48:13] [33mwarn[39m: Failed to print logo:  ENOENT: no such file or directory, access 'D:\Programing\WorkFolders\restaurant-pos\backend\https:\avatars.githubusercontent.com\u\127545417?v=4'
[2025-06-28 14:49:01] [33mwarn[39m: Failed to print logo:  ENOENT: no such file or directory, access 'D:\Programing\WorkFolders\restaurant-pos\backend\https:\avatars.githubusercontent.com\u\127545417?v=4'
[2025-06-28 15:00:08] [33mwarn[39m: Failed to print logo:  unrecognised content at end of stream
[2025-06-28 15:05:53] [32minfo[39m: Filter: 
[2025-06-28 15:21:20] [32minfo[39m: Filter: 
[2025-06-28 15:36:13] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "items",
      0,
      "title_en"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "tax"
    ],
    "message": "Expected number, received object"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "service"
    ],
    "message": "Expected number, received object"
  }
]
[2025-06-28 15:36:13] [33mwarn[39m: Invalid Print Data:  [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "items",
      0,
      "title_en"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "tax"
    ],
    "message": "Expected number, received object"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "service"
    ],
    "message": "Expected number, received object"
  }
]
[2025-06-28 15:36:18] [32minfo[39m: Filter: 
[2025-06-28 15:37:43] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "tax"
    ],
    "message": "Expected number, received object"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "service"
    ],
    "message": "Expected number, received object"
  }
]
[2025-06-28 15:37:43] [33mwarn[39m: Invalid Print Data:  [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "tax"
    ],
    "message": "Expected number, received object"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "object",
    "path": [
      "service"
    ],
    "message": "Expected number, received object"
  }
]
[2025-06-28 15:38:08] [32minfo[39m: Filter: 
[2025-06-28 15:39:21] [32minfo[39m: Filter: 
[2025-06-28 15:39:43] [32minfo[39m: Filter: 
[2025-06-28 15:53:35] [32minfo[39m: Filter: 
[2025-06-28 16:07:05] [32minfo[39m: Filter: 
[2025-06-28 16:07:05] [33mwarn[39m: No Data Found
[2025-06-28 16:07:06] [33mwarn[39m: No Data Found
[2025-06-28 16:29:14] [32minfo[39m: Filter: 
[2025-06-28 16:33:39] [33mwarn[39m: No Data Found
[2025-06-28 16:33:40] [33mwarn[39m: No Data Found
[2025-06-28 16:39:14] [32minfo[39m: Filter: 
[2025-06-28 16:42:37] [32minfo[39m: Filter: 
[2025-06-28 16:43:46] [32minfo[39m: Filter: 
[2025-06-28 16:45:09] [32minfo[39m: Filter: 
[2025-06-28 16:50:29] [32minfo[39m: Filter: 
[2025-06-28 17:47:11] [32minfo[39m: Filter: 
[2025-06-28 17:47:19] [33mwarn[39m: No Data Found
[2025-06-28 17:47:20] [33mwarn[39m: No Data Found
[2025-06-28 17:47:43] [31merror[39m: Print Error:  connect ECONNREFUSED 192.168.1.21:9100
[2025-06-28 17:49:43] [33mwarn[39m: No Data Found
[2025-06-28 17:49:44] [33mwarn[39m: No Data Found
[2025-06-28 22:20:39] [32minfo[39m: Filter: 
[2025-06-28 22:21:14] [33mwarn[39m: No Data Found
[2025-06-28 22:21:15] [33mwarn[39m: No Data Found
[2025-06-28 22:21:51] [33mwarn[39m: No Data Found
[2025-06-28 22:21:51] [33mwarn[39m: No Data Found
[2025-06-28 22:21:52] [33mwarn[39m: No Data Found
[2025-06-28 22:21:55] [32minfo[39m: Filter: 
[2025-06-28 22:21:57] [33mwarn[39m: No Data Found
[2025-06-28 22:21:57] [33mwarn[39m: No Data Found
[2025-06-28 22:21:58] [33mwarn[39m: No Data Found
[2025-06-28 22:22:04] [33mwarn[39m: No Data Found
[2025-06-28 22:22:04] [33mwarn[39m: No Data Found
[2025-06-28 22:22:05] [33mwarn[39m: No Data Found
[2025-06-28 22:23:52] [32minfo[39m: Filter: 
[2025-06-28 22:27:33] [32minfo[39m: Filter: 
[2025-06-28 22:29:26] [33mwarn[39m: No Data Found
[2025-06-28 22:29:26] [33mwarn[39m: No Data Found
[2025-06-28 22:29:28] [33mwarn[39m: No Data Found
[2025-06-28 22:30:12] [33mwarn[39m: Please check the table orders.
[2025-06-28 22:30:16] [33mwarn[39m: Please check the table orders.
[2025-06-28 22:30:29] [33mwarn[39m: No Data Found
[2025-06-28 22:30:29] [33mwarn[39m: No Data Found
[2025-06-28 22:31:34] [32minfo[39m: Filter: 
[2025-06-28 23:02:41] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:42] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:45] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:46] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:49] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:50] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:53] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:02:53] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:05:59] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:00] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:03] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:03] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:07] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:08] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:10] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:06:12] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:24] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:25] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:27] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:29] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:31] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:32] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:34] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:36] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:55] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:56] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:08:59] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:00] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:02] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:03] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:05] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:06] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:48] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:49] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:52] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:52] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:55] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:55] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:58] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:09:59] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:10:18] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:10:52] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:12:00] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:12:41] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:13:03] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:13:47] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:14:52] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:14:54] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:16:13] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-28 23:19:29] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-28 23:19:33] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-28 23:19:37] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-28 23:19:40] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 10:24:17] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Tue Jun 17 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Wed Jun 25 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 10:24:21] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Tue Jun 17 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Wed Jun 25 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 10:24:24] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Tue Jun 17 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Wed Jun 25 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 10:24:27] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Tue Jun 17 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Wed Jun 25 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 10:45:07] [32minfo[39m: Filter: 
[2025-06-29 10:46:31] [33mwarn[39m: Credentials Don't Match
[2025-06-29 10:54:59] [31merror[39m: Get Invoices:  
Invalid `prisma.invoice.findMany()` invocation:

{
  where: {
    paymentMethod: {
      equals: "debt"
              ~~~~~~
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `equals`. Expected PaymentMethod.
[2025-06-29 10:59:44] [31merror[39m: Get Invoices:  
Invalid `prisma.invoice.findMany()` invocation:

{
  where: {
    paymentMethod: {
      equals: "RECEI"
              ~~~~~~~
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `equals`. Expected PaymentMethod.
[2025-06-29 11:26:54] [32minfo[39m: Filter: 
[2025-06-29 11:30:01] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [
      "invoiceNO"
    ],
    "message": "Expected string, received number"
  }
]
[2025-06-29 11:30:01] [33mwarn[39m: Error:  [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [
      "invoiceNO"
    ],
    "message": "Expected string, received number"
  }
]
[2025-06-29 11:31:19] [32minfo[39m: Filter: 
[2025-06-29 11:43:10] [32minfo[39m: Filter: 
[2025-06-29 11:45:28] [32minfo[39m: Filter: 
[2025-06-29 11:47:39] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 11:47:43] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 11:47:46] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 11:47:49] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 11:50:57] [32minfo[39m: Filter: 
[2025-06-29 11:51:09] [32minfo[39m: Filter: 
[2025-06-29 11:52:02] [32minfo[39m: Filter: 
[2025-06-29 11:52:10] [32minfo[39m: Filter: 
[2025-06-29 12:00:31] [32minfo[39m: Filter: 
[2025-06-29 12:00:56] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 12:00:56] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 12:03:09] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 12:03:09] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 12:04:46] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 12:04:46] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 12:05:29] [32minfo[39m: Filter: 
[2025-06-29 12:09:21] [32minfo[39m: Filter: 
[2025-06-29 12:13:26] [32minfo[39m: Filter: 
[2025-06-29 12:16:06] [32minfo[39m: Filter: 
[2025-06-29 12:20:02] [32minfo[39m: Filter: 
[2025-06-29 12:24:00] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:04] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:08] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:11] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:19] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:23] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:26] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:24:30] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sat Jun 28 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  include: {
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:34:16] [33mwarn[39m: No Payments found.
[2025-06-29 12:35:25] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:35:29] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:35:33] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:35:36] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "Fri Jun 27 2025 00:00:00 GMT 0300 (Arabian Standard Time)",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GMT 0300 (Arabian Standard Time)"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:41:17] [33mwarn[39m: No Payments found.
[2025-06-29 12:41:21] [33mwarn[39m: No Payments found.
[2025-06-29 12:41:25] [33mwarn[39m: No Payments found.
[2025-06-29 12:41:29] [33mwarn[39m: No Payments found.
[2025-06-29 12:43:14] [32minfo[39m: Filter: 
[2025-06-29 12:43:37] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GM",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GM"
    }
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:43:41] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GM",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GM"
    }
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:43:45] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GM",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GM"
    }
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:43:48] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: "Fri Jun 27 2025 00:00:00 GM",
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      lte: "Sun Jun 29 2025 00:00:00 GM"
    }
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: input contains invalid characters. Expected ISO-8601 DateTime.
[2025-06-29 12:43:51] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:43:54] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:43:55] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:43:58] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:43:58] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:44:01] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:44:01] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 12:44:05] [31merror[39m: Get Payments Service:  
Invalid `prisma.payment.findMany()` invocation:

{
  where: {
    paymentDate: {
      gte: "2025-06-26",
           ~~~~~~~~~~~~
      lte: "2025-06-28"
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  include: {
    user: {
      include: {
        role: true
      }
    },
    companyDebt: {
      select: {
        companyId: true,
        company: true,
        currency: true,
        totalAmount: true,
        remainingAmount: true
      }
    }
  }
}

Invalid value for argument `gte`: premature end of input. Expected ISO-8601 DateTime.
[2025-06-29 13:10:19] [32minfo[39m: Filter: 
[2025-06-29 13:13:01] [32minfo[39m: Filter: 
[2025-06-29 13:18:47] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 13:18:47] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 13:18:54] [31merror[39m: Validation failed: [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 13:18:54] [33mwarn[39m: Error:  [
  {
    "code": "invalid_date",
    "path": [
      "purchasedAt"
    ],
    "message": "Invalid date"
  }
]
[2025-06-29 13:20:18] [33mwarn[39m: No Payments found.
[2025-06-29 13:20:22] [33mwarn[39m: No Payments found.
[2025-06-29 13:20:25] [33mwarn[39m: No Payments found.
[2025-06-29 13:20:28] [33mwarn[39m: No Payments found.
[2025-06-29 13:23:41] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:23:42] [32minfo[39m: Filter: 
[2025-06-29 13:23:45] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:23:48] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:23:53] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:24:13] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:24:22] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:24:29] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:25:02] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:25:05] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:25:09] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:25:12] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:25:21] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 13:55:02] [32minfo[39m: Filter: 
[2025-06-29 13:56:19] [32minfo[39m: Filter: 
[2025-06-29 14:12:07] [32minfo[39m: Filter: 
[2025-06-29 14:14:42] [32minfo[39m: Filter: 
[2025-06-29 14:21:18] [32minfo[39m: Filter: 
[2025-06-29 14:21:42] [32minfo[39m: Filter: 
[2025-06-29 14:21:56] [32minfo[39m: Filter: 
[2025-06-29 14:35:28] [32minfo[39m: Filter: 
[2025-06-29 14:51:08] [32minfo[39m: Filter: 
[2025-06-29 14:55:50] [32minfo[39m: Filter: 
[2025-06-29 14:57:19] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 14:57:22] [31merror[39m: Get Finances Service:  
Invalid `prisma.companyDebt.findMany()` invocation:

{
  where: {
    createdAt: {
      gte: new Date("Invalid Date"),
           ~~~~~~~~~~~~~~~~~~~~~~~~
      lte: new Date("Invalid Date")
    }
  },
  include: {
    user: {
      select: {
        role: true,
        username: true
      }
    },
    company: {
      select: {
        name: true,
        phoneNumber: true,
        currency: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  }
}

Invalid value for argument `gte`: Provided Date object is invalid. Expected Date.
[2025-06-29 15:04:52] [32minfo[39m: Filter: 
[2025-06-29 15:28:07] [31merror[39m: Auth login Service:  The "salt" argument must be of type string or an instance of ArrayBuffer, Buffer, TypedArray, or DataView. Received undefined
[2025-06-29 15:28:19] [31merror[39m: Auth login Service:  The "salt" argument must be of type string or an instance of ArrayBuffer, Buffer, TypedArray, or DataView. Received undefined
[2025-06-29 15:36:24] [33mwarn[39m: User is not active.
[2025-06-29 15:36:24] [33mwarn[39m: User is not active.
[2025-06-29 15:36:24] [33mwarn[39m: User is not active.
[2025-06-29 15:37:46] [33mwarn[39m: Credentials Don't Match
[2025-06-29 15:39:58] [33mwarn[39m: User is not active.
[2025-06-29 15:39:58] [33mwarn[39m: User is not active.
[2025-06-29 15:39:58] [33mwarn[39m: User is not active.
[2025-06-29 15:40:25] [33mwarn[39m: User is not active.
[2025-06-29 15:40:25] [33mwarn[39m: User is not active.
[2025-06-29 15:40:25] [33mwarn[39m: User is not active.
[2025-06-29 15:40:28] [33mwarn[39m: User is not active.
[2025-06-29 15:40:29] [33mwarn[39m: User is not active.
[2025-06-29 15:41:02] [33mwarn[39m: User is not active.
[2025-06-29 15:41:08] [33mwarn[39m: User is not active.
[2025-06-29 15:41:09] [33mwarn[39m: User is not active.
[2025-06-29 15:41:09] [33mwarn[39m: User is not active.
[2025-06-29 15:41:09] [33mwarn[39m: User is not active.
[2025-06-29 16:01:38] [32minfo[39m: undefined
[2025-06-29 16:04:32] [32minfo[39m: undefined
[2025-06-29 16:04:39] [32minfo[39m: Filter: 
[2025-06-29 16:05:22] [33mwarn[39m: No Data Found
[2025-06-29 16:05:23] [33mwarn[39m: No Data Found
[2025-06-29 16:06:18] [33mwarn[39m: No Data Found
[2025-06-29 16:06:19] [33mwarn[39m: No Data Found
[2025-06-29 16:06:21] [33mwarn[39m: No Data Found
[2025-06-29 16:14:54] [32minfo[39m: Filter: 
[2025-06-29 16:42:09] [32minfo[39m: Filter: 
[2025-06-29 16:42:16] [32minfo[39m: Filter: 
[2025-06-29 16:59:43] [31merror[39m: Get Customers:  Cannot destructure property 'discount' of 'customer.customerDiscount' as it is null.
[2025-06-29 16:59:45] [31merror[39m: Get Customers:  Cannot destructure property 'discount' of 'customer.customerDiscount' as it is null.
[2025-06-29 17:16:47] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:17:03] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:18:06] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:19:05] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:37:59] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:38:31] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:39:41] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-29 17:40:25] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:46:42] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:49:08] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:50:17] [31merror[39m: Auth Update User Service:  
Invalid `prisma.user.update()` invocation:


Foreign key constraint violated on the constraint: `User_roleId_fkey`
[2025-06-29 17:50:47] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:51:50] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:54:01] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:54:21] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:54:25] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:55:30] [31merror[39m: Create UserRole Service:  
Invalid `prisma.userRole.create()` invocation:


Unique constraint failed on the fields: (`name`)
[2025-06-29 17:59:27] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "null",
    "path": [
      "id"
    ],
    "message": "Expected number, received null"
  }
]
[2025-06-29 17:59:27] [33mwarn[39m: Missing ID
[2025-06-29 17:59:29] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "null",
    "path": [
      "id"
    ],
    "message": "Expected number, received null"
  }
]
[2025-06-29 17:59:29] [33mwarn[39m: Missing ID
[2025-06-29 17:59:41] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "null",
    "path": [
      "id"
    ],
    "message": "Expected number, received null"
  }
]
[2025-06-29 17:59:41] [33mwarn[39m: Missing ID
[2025-06-29 18:02:07] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-29 18:02:13] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-29 18:02:51] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "null",
    "path": [
      "id"
    ],
    "message": "Expected number, received null"
  }
]
[2025-06-29 18:02:52] [33mwarn[39m: Missing ID
[2025-06-29 18:05:38] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-29 18:07:24] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  }
]
[2025-06-29 18:07:24] [33mwarn[39m: Missing Info:  [
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  }
]
[2025-06-29 18:08:01] [31merror[39m: Create UserRole Service:  User role with this name already exists.
[2025-06-29 18:10:42] [31merror[39m: Validation failed: [
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  }
]
[2025-06-29 18:10:42] [33mwarn[39m: Missing Info:  [
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      0,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      1,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      2,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "createdAt"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "permissions",
      3,
      "updatedAt"
    ],
    "message": "Expected date, received string"
  }
]
[2025-06-29 22:18:13] [32minfo[39m: Filter: 
[2025-06-29 22:31:42] [32minfo[39m: Filter: 
[2025-06-29 22:31:42] [33mwarn[39m: No Data Found
[2025-06-29 22:31:43] [33mwarn[39m: No Data Found
[2025-06-29 22:31:55] [33mwarn[39m: No Data Found
[2025-06-29 22:31:55] [33mwarn[39m: No Data Found
[2025-06-29 22:31:56] [33mwarn[39m: No Data Found
[2025-06-29 22:44:25] [32minfo[39m: Filter: 
[2025-06-29 23:49:39] [32minfo[39m: Filter: 
[2025-06-30 10:27:55] [33mwarn[39m: Credentials Don't Match
[2025-06-30 11:14:08] [33mwarn[39m: A User with the same phone number exists already.
[2025-06-30 11:14:10] [33mwarn[39m: A User with the same phone number exists already.
[2025-06-30 11:14:12] [33mwarn[39m: A User with the same phone number exists already.
[2025-06-30 11:14:14] [33mwarn[39m: A User with the same phone number exists already.
[2025-06-30 11:14:16] [33mwarn[39m: A User with the same phone number exists already.
[2025-06-30 11:14:18] [33mwarn[39m: A User with the same phone number exists already.
[2025-06-30 11:14:39] [32minfo[39m: Filter: 
[2025-06-30 11:14:39] [33mwarn[39m: No Data Found
[2025-06-30 11:14:40] [33mwarn[39m: No Data Found
[2025-06-30 11:14:57] [33mwarn[39m: No Data Found
[2025-06-30 11:14:57] [33mwarn[39m: No Data Found
[2025-06-30 11:14:58] [33mwarn[39m: No Data Found
[2025-06-30 11:22:30] [32minfo[39m: Filter: 
[2025-06-30 11:22:30] [33mwarn[39m: No Data Found
[2025-06-30 11:22:31] [33mwarn[39m: No Data Found
[2025-06-30 11:22:43] [33mwarn[39m: No Data Found
[2025-06-30 11:22:43] [33mwarn[39m: No Data Found
[2025-06-30 11:22:44] [33mwarn[39m: No Data Found
[2025-06-30 11:24:59] [32minfo[39m: Filter: 
[2025-06-30 11:34:02] [32minfo[39m: Filter: 
[2025-06-30 11:38:07] [32minfo[39m: Filter: 
[2025-06-30 11:38:07] [33mwarn[39m: No Data Found
[2025-06-30 11:38:08] [33mwarn[39m: No Data Found
[2025-06-30 11:38:22] [33mwarn[39m: No Data Found
[2025-06-30 11:38:22] [33mwarn[39m: No Data Found
[2025-06-30 11:38:23] [33mwarn[39m: No Data Found
[2025-06-30 11:41:11] [32minfo[39m: Filter: 
[2025-06-30 11:41:48] [32minfo[39m: Filter: 
[2025-06-30 11:41:49] [33mwarn[39m: No Data Found
[2025-06-30 11:41:52] [33mwarn[39m: No Data Found
[2025-06-30 11:43:22] [32minfo[39m: Filter: 
[2025-06-30 11:43:23] [33mwarn[39m: No Data Found
[2025-06-30 11:43:25] [33mwarn[39m: No Data Found
[2025-06-30 11:44:18] [33mwarn[39m: No Data Found
[2025-06-30 11:46:22] [33mwarn[39m: No Data Found
[2025-06-30 11:46:24] [33mwarn[39m: No Data Found
[2025-06-30 11:46:26] [32minfo[39m: Filter: 
[2025-06-30 11:46:33] [33mwarn[39m: No Data Found
[2025-06-30 11:46:35] [33mwarn[39m: No Data Found
[2025-06-30 11:48:29] [32minfo[39m: Filter: 
[2025-06-30 11:50:55] [32minfo[39m: Filter: 
[2025-06-30 11:52:33] [32minfo[39m: Filter: 
[2025-06-30 11:55:03] [33mwarn[39m: NOT FOUND
[2025-06-30 11:55:06] [33mwarn[39m: NOT FOUND
[2025-06-30 11:55:08] [33mwarn[39m: NOT FOUND
[2025-06-30 11:58:15] [32minfo[39m: Filter: 
[2025-06-30 12:04:20] [32minfo[39m: undefined
[2025-06-30 12:04:28] [32minfo[39m: Filter: 
[2025-06-30 12:12:24] [32minfo[39m: undefined
[2025-06-30 12:12:35] [32minfo[39m: Filter: 
