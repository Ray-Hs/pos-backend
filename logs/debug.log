[2025-08-06 11:25:45] info: Created uploads directory: D:\Programing\WorkFolders\restaurant-pos\backend\backend\uploads\images
[2025-08-06 11:25:55] warn: No Data Found
[2025-08-06 11:25:55] warn: No Data Found
[2025-08-06 11:25:55] warn: No Data Found
[2025-08-06 11:25:55] warn: No Data Found
[2025-08-06 11:25:56] warn: No Data Found
[2025-08-06 11:30:47] info: Filter: 
[2025-08-06 11:31:28] info: Filter: 
[2025-08-06 11:31:33] warn: Brand Not Found
[2025-08-06 11:31:34] warn: Brand Not Found
[2025-08-06 11:31:36] warn: Brand Not Found
[2025-08-06 11:31:40] warn: Brand Not Found
[2025-08-06 11:33:03] warn: No Data Found
[2025-08-06 11:33:03] warn: No Data Found
[2025-08-06 11:33:03] warn: No Data Found
[2025-08-06 11:33:04] warn: No Data Found
[2025-08-06 11:33:16] warn: No Data Found
[2025-08-06 11:33:16] info: Filter: 
[2025-08-06 11:33:16] warn: No Data Found
[2025-08-06 11:33:16] warn: No Data Found
[2025-08-06 11:33:17] warn: No Data Found
[2025-08-06 11:33:17] warn: No Data Found
[2025-08-06 11:33:18] warn: No Data Found
[2025-08-06 12:06:47] info: Filter: 
[2025-08-06 12:07:04] info: Order 11 marked as cancelled in database
[2025-08-06 12:07:06] info: Printed full order cancellation for order 11 on 192.168.1.100
[2025-08-06 12:07:06] warn: No Data Found
[2025-08-06 12:07:07] warn: No Data Found
[2025-08-06 12:07:07] warn: No Data Found
[2025-08-06 12:07:12] warn: No Data Found
[2025-08-06 12:07:12] warn: No Data Found
[2025-08-06 12:07:29] warn: No Data Found
[2025-08-06 12:07:29] warn: No Data Found
[2025-08-06 12:07:29] warn: No Data Found
[2025-08-06 12:07:30] warn: No Data Found
[2025-08-06 12:08:18] warn: No Data Found
[2025-08-06 12:08:18] info: Filter: 
[2025-08-06 12:08:18] warn: No Data Found
[2025-08-06 12:08:19] warn: No Data Found
[2025-08-06 12:08:20] warn: No Data Found
[2025-08-06 12:08:34] error: Image deletion failed: Image not found
[2025-08-06 12:08:50] error: Image deletion failed: Image not found
[2025-08-06 12:09:51] info: Image deleted successfully: http://localhost:3001/api/images/a097a1cd-b35a-4c59-ac2b-7d60c1232640/5d2dc546-d617-45c2-9e64-87bcd78dd02e-optaboutcomcoeusresourcescontentmigrationsimplyrecipesuploads201909easy-pepperoni-pizza-lead-3-1024x682-583b275444104ef189d693a64df625da.jpg
[2025-08-06 12:10:10] info: Image deleted successfully: http://localhost:3001/api/images/a097a1cd-b35a-4c59-ac2b-7d60c1232640/5d2dc546-d617-45c2-9e64-87bcd78dd02e-optaboutcomcoeusresourcescontentmigrationsimplyrecipesuploads201909easy-pepperoni-pizza-lead-3-1024x682-583b275444104ef189d693a64df625da.jpg
[2025-08-06 12:10:57] info: Image deleted successfully: http://localhost:3001/api/images/a097a1cd-b35a-4c59-ac2b-7d60c1232640/5d2dc546-d617-45c2-9e64-87bcd78dd02e-optaboutcomcoeusresourcescontentmigrationsimplyrecipesuploads201909easy-pepperoni-pizza-lead-3-1024x682-583b275444104ef189d693a64df625da.jpg
[2025-08-06 12:11:35] warn: Brand Not Found
[2025-08-06 12:11:36] warn: Brand Not Found
[2025-08-06 12:11:38] warn: Brand Not Found
[2025-08-06 12:11:42] warn: Brand Not Found
[2025-08-06 12:12:20] warn: No Data Found
[2025-08-06 12:12:20] warn: No Data Found
[2025-08-06 12:12:20] warn: No Data Found
[2025-08-06 12:12:21] warn: No Data Found
[2025-08-06 12:14:23] warn: Brand Not Found
[2025-08-06 12:14:24] warn: Brand Not Found
[2025-08-06 12:14:26] warn: Brand Not Found
[2025-08-06 12:14:30] warn: Brand Not Found
[2025-08-06 12:15:41] info: Filter: 
[2025-08-06 12:15:56] info: Filter: 
[2025-08-06 12:38:30] warn: No Data Found
[2025-08-06 12:38:30] warn: No Data Found
[2025-08-06 12:38:30] warn: No Data Found
[2025-08-06 12:38:32] warn: No Data Found
[2025-08-06 12:38:32] warn: No Data Found
[2025-08-06 12:38:32] warn: No Data Found
[2025-08-06 12:38:38] info: Printed 2 items on 192.168.1.100
[2025-08-06 12:38:53] warn: Brand Not Found
[2025-08-06 12:38:54] warn: Brand Not Found
[2025-08-06 12:38:56] warn: Brand Not Found
[2025-08-06 12:39:00] warn: Brand Not Found
[2025-08-06 12:39:07] warn: Brand Not Found
[2025-08-06 12:40:45] warn: Brand Not Found
[2025-08-06 12:40:47] warn: Brand Not Found
[2025-08-06 12:40:51] warn: Brand Not Found
[2025-08-06 12:41:07] warn: Brand Not Found
[2025-08-06 12:41:09] warn: Brand Not Found
[2025-08-06 12:41:13] warn: Brand Not Found
[2025-08-06 12:41:26] warn: Brand Not Found
[2025-08-06 12:41:27] warn: Brand Not Found
[2025-08-06 12:41:32] warn: Brand Not Found
[2025-08-06 12:41:48] warn: Brand Not Found
[2025-08-06 12:42:28] warn: No Data Found
[2025-08-06 12:42:28] warn: No Data Found
[2025-08-06 12:42:28] warn: No Data Found
[2025-08-06 12:42:29] warn: No Data Found
[2025-08-06 12:43:58] warn: Brand Not Found
[2025-08-06 12:43:59] warn: Brand Not Found
[2025-08-06 12:44:01] warn: Brand Not Found
[2025-08-06 12:44:05] warn: Brand Not Found
[2025-08-07 12:20:48] warn: No Data Found
[2025-08-07 12:20:48] warn: No Data Found
[2025-08-07 12:20:48] warn: No Data Found
[2025-08-07 12:20:48] info: Filter: 
[2025-08-07 12:20:49] warn: No Data Found
[2025-08-07 12:21:43] info: Image uploaded successfully: http://localhost:3001/api/images/ef07e354-4a96-4cab-8077-3a617551fbe9/a9bb73b2-0b1e-4609-8da5-8d63af99174e-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:21:43] info: Image uploaded successfully: http://localhost:3001/api/images/ef07e354-4a96-4cab-8077-3a617551fbe9/a9bb73b2-0b1e-4609-8da5-8d63af99174e-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:21:57] info: Image uploaded successfully: http://localhost:3001/api/images/36c07491-2eab-4b08-904e-5c971120d018/30d80370-906f-4d19-9224-7e0d12866b14-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:21:57] info: Image uploaded successfully: http://localhost:3001/api/images/36c07491-2eab-4b08-904e-5c971120d018/30d80370-906f-4d19-9224-7e0d12866b14-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:24:52] info: Image uploaded successfully: http://localhost:3001/api/images/92d6593d-96a9-41aa-a2b7-61dfc70fc14f/2aecb91e-8b25-4da2-b984-32b0a34adba4-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:24:52] info: Image uploaded successfully: http://localhost:3001/api/images/92d6593d-96a9-41aa-a2b7-61dfc70fc14f/2aecb91e-8b25-4da2-b984-32b0a34adba4-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:25:59] info: Image uploaded successfully: http://localhost:3001/api/images/84469216-4fd2-4130-b211-e93020351965/4f0f1906-6e1f-4e6f-ae22-6bbeec4f393a-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-07 12:25:59] info: Image uploaded successfully: http://localhost:3001/api/images/84469216-4fd2-4130-b211-e93020351965/4f0f1906-6e1f-4e6f-ae22-6bbeec4f393a-ar-24878-bbq-chicken-pizza-beauty-4x3-39cd80585ad04941914dca4bd82eae3d.jpg
[2025-08-09 11:34:03] warn: No Data Found
[2025-08-09 11:34:03] warn: Not Data Found
[2025-08-09 11:34:05] warn: Not Data Found
[2025-08-09 11:34:05] warn: No Data Found
[2025-08-09 11:34:07] warn: Not Data Found
[2025-08-09 11:34:07] warn: No Data Found
[2025-08-09 11:34:12] warn: Not Data Found
[2025-08-09 11:34:12] warn: No Data Found
[2025-08-09 11:35:13] info: Filter: 
[2025-08-09 11:35:13] warn: No Data Found
[2025-08-09 11:35:13] warn: No Data Found
[2025-08-09 11:35:13] warn: No Data Found
[2025-08-09 11:35:14] warn: No Data Found
[2025-08-09 11:35:24] info: Filter: 
[2025-08-09 11:35:24] warn: No Data Found
[2025-08-09 11:35:24] warn: No Data Found
[2025-08-09 11:35:24] warn: No Data Found
[2025-08-09 11:35:25] warn: No Data Found
[2025-08-09 11:35:25] warn: No Data Found
[2025-08-09 11:35:26] warn: No Data Found
[2025-08-09 11:35:35] info: Order 14 marked as cancelled in database
[2025-08-09 11:35:47] error: Order cancellation print failed on 192.168.1.100: Socket timeout
{
  "stack": "Error: Socket timeout\n    at Socket.<anonymous> (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\node-thermal-printer\\lib\\interfaces\\network.js:76:16)\n    at Socket.emit (node:events:507:28)\n    at Socket.emit (node:domain:489:12)\n    at Socket._onTimeout (node:net:604:8)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)"
}
[2025-08-09 11:35:55] warn: No Data Found
[2025-08-09 11:35:55] info: Filter: 
[2025-08-09 11:35:55] warn: No Data Found
[2025-08-09 11:35:55] warn: No Data Found
[2025-08-09 11:35:56] warn: No Data Found
[2025-08-09 11:36:01] warn: No Data Found
[2025-08-09 11:36:01] warn: No Data Found
[2025-08-09 11:36:02] warn: No Data Found
[2025-08-09 11:36:05] warn: No Data Found
[2025-08-09 11:36:05] warn: No Data Found
[2025-08-09 11:36:05] warn: No Data Found
[2025-08-09 11:36:06] warn: No Data Found
[2025-08-09 11:36:15] warn: No Data Found
[2025-08-09 11:36:15] info: Filter: 
[2025-08-09 11:36:15] warn: No Data Found
[2025-08-09 11:36:15] warn: No Data Found
[2025-08-09 11:36:16] warn: No Data Found
[2025-08-09 11:36:21] warn: No Data Found
[2025-08-09 11:36:21] warn: No Data Found
[2025-08-09 11:36:22] warn: No Data Found
[2025-08-09 11:36:54] warn: No Data Found
[2025-08-09 11:36:55] debug: DB: transaction
{
  "phase": "START"
}
[2025-08-09 11:36:55] debug: DB: menuItem.findFirst
{
  "itemCount": 4
}
[2025-08-09 11:36:55] info: PERF: Fetch menu items completed in 3ms
{
  "count": 4,
  "menuItems": [
    {
      "id": 1,
      "title": "Pizza"
    },
    {
      "id": 1,
      "title": "Pizza"
    },
    {
      "id": 1,
      "title": "Pizza"
    },
    {
      "id": 1,
      "title": "Pizza"
    }
  ]
}
[2025-08-09 11:36:55] debug: Calculating old item quantities
[2025-08-09 11:36:55] debug: Old quantities calculated
{
  "oldItemMap": {
    "pizza": 3
  }
}
[2025-08-09 11:36:55] debug: Calculating new item quantities
[2025-08-09 11:36:55] debug: New quantities calculated
{
  "newItemMap": {
    "pizza": 4
  }
}
[2025-08-09 11:36:55] info: Processing supply updates
{
  "itemNames": [
    "pizza"
  ]
}
[2025-08-09 11:36:55] debug: Processing item supply update
{
  "itemName": "pizza",
  "oldQty": 3,
  "newQty": 4,
  "qtyDifference": 1
}
[2025-08-09 11:36:55] debug: Found supplies for item
{
  "itemName": "pizza",
  "suppliesCount": 1,
  "supplies": [
    {
      "id": 1,
      "remainingQuantity": 102
    }
  ]
}
[2025-08-09 11:36:55] debug: Starting supply deduction process
{
  "itemName": "pizza",
  "totalToDeduct": 1
}
[2025-08-09 11:36:55] debug: Processing individual supply
{
  "supplyId": 1,
  "currentRemaining": 102,
  "remainingToDeduct": 1,
  "calculatedNewQty": 101
}
[2025-08-09 11:36:55] debug: Supply fully satisfied deduction
{
  "supplyId": 1,
  "oldQuantity": 102,
  "newQuantity": 101,
  "deducted": 1
}
[2025-08-09 11:36:55] info: PERF: Supply updates completed in 3ms
[2025-08-09 11:36:55] debug: DB: order.update
{
  "orderId": 15
}
[2025-08-09 11:36:55] info: undefined
[2025-08-09 11:36:55] info: PERF: updateOrder completed in 21ms
{
  "orderId": 15,
  "finalItemsCount": 4,
  "newInvoiceId": 20,
  "newInvoiceVersion": 2
}
[2025-08-09 11:36:55] debug: updateOrder - EXIT
{
  "success": true
}
[2025-08-09 11:36:58] info: Order 15 marked as cancelled in database
[2025-08-09 11:37:08] warn: Printer 192.168.1.100 not connected
[2025-08-09 11:37:14] warn: No Data Found
[2025-08-09 11:37:14] warn: No Data Found
[2025-08-09 11:37:14] warn: No Data Found
[2025-08-09 11:37:15] warn: No Data Found
[2025-08-09 12:53:25] info: Filter: 
[2025-08-09 12:53:51] info: Image uploaded successfully: http://localhost:3001/api/images/14e27fe4-0269-4b11-9d00-60050eb0cf34/f38cefc8-ba56-4b38-9214-dd53e32db328-asian-grilled-chicken-7.jpg
[2025-08-09 12:53:51] info: Image uploaded successfully: http://localhost:3001/api/images/14e27fe4-0269-4b11-9d00-60050eb0cf34/f38cefc8-ba56-4b38-9214-dd53e32db328-asian-grilled-chicken-7.jpg
[2025-08-09 12:53:51] info: Filter: 
[2025-08-09 12:55:22] info: Filter: 
[2025-08-09 12:55:42] info: Image uploaded successfully: http://localhost:3001/api/images/5425c630-2f63-4fd4-93a2-132fc3f59895/388a9634-0936-49cf-a093-8b026fd76dba-25202beef-stroganoff-iii-ddmfs-3x4-233-0f26fa477e9c446b970a32502468efc6.jpg
[2025-08-09 12:55:42] info: Image uploaded successfully: http://localhost:3001/api/images/5425c630-2f63-4fd4-93a2-132fc3f59895/388a9634-0936-49cf-a093-8b026fd76dba-25202beef-stroganoff-iii-ddmfs-3x4-233-0f26fa477e9c446b970a32502468efc6.jpg
[2025-08-09 12:55:42] info: Filter: 
[2025-08-10 15:37:38] info: Filter: 
[2025-08-10 15:37:59] error: Create Order Service:  Transaction API error: Transaction already closed: A commit cannot be executed on an expired transaction. The timeout for this transaction was 5000 ms, however 7527 ms passed since the start of the transaction. Consider increasing the interactive transaction timeout or doing less work in the transaction.
{
  "code": "P2028",
  "meta": {
    "error": "Transaction already closed: A commit cannot be executed on an expired transaction. The timeout for this transaction was 5000 ms, however 7527 ms passed since the start of the transaction. Consider increasing the interactive transaction timeout or doing less work in the transaction."
  },
  "clientVersion": "6.9.0",
  "name": "PrismaClientKnownRequestError",
  "stack": "PrismaClientKnownRequestError: Transaction API error: Transaction already closed: A commit cannot be executed on an expired transaction. The timeout for this transaction was 5000 ms, however 7527 ms passed since the start of the transaction. Consider increasing the interactive transaction timeout or doing less work in the transaction.\n    at Gr.transaction (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:111:12816)\n    at async Proxy._transactionWithCallback (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:8173)\n    at async OrderServices.createOrder (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\order\\order.services.ts:207:28)\n    at async createOrder (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\api\\controllers\\table\\order.controller.ts:55:22)"
}
[2025-08-10 15:38:09] info: Filter: 
[2025-08-10 15:38:48] warn: No Data Found
[2025-08-10 15:38:48] warn: No Data Found
[2025-08-10 15:38:49] warn: No Data Found
[2025-08-10 15:38:50] warn: No Data Found
[2025-08-10 15:38:59] warn: No Data Found
[2025-08-10 15:39:00] warn: No Data Found
[2025-08-10 15:39:01] warn: No Data Found
[2025-08-10 15:40:20] warn: No Data Found
[2025-08-10 15:40:20] warn: No Data Found
[2025-08-10 15:40:21] warn: No Data Found
[2025-08-10 15:40:21] warn: No Data Found
[2025-08-10 15:40:22] warn: No Data Found
[2025-08-10 15:40:24] warn: No Data Found
[2025-08-10 15:40:24] warn: No Data Found
[2025-08-10 15:40:25] warn: No Data Found
[2025-08-10 15:40:29] error: Update Invoice Service:  
Invalid `prisma.table.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. No record was found for an update.
{
  "code": "P2025",
  "meta": {
    "modelName": "Table",
    "cause": "No record was found for an update."
  },
  "clientVersion": "6.9.0",
  "name": "PrismaClientKnownRequestError",
  "stack": "PrismaClientKnownRequestError: \nInvalid `prisma.table.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. No record was found for an update.\n    at Zn.handleRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Zn.handleAndLogRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\invoice\\invoice.services.ts:713:27\n    at async Proxy._transactionWithCallback (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:8139)\n    at async InvoiceServices.updateInvoice (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\invoice\\invoice.services.ts:683:41)\n    at async updateInvoice (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\api\\controllers\\invoice\\invoice.controller.ts:94:22)"
}
[2025-08-10 15:40:40] warn: No Data Found
[2025-08-10 15:40:41] warn: No Data Found
[2025-08-10 15:40:41] warn: No Data Found
[2025-08-10 15:40:42] warn: No Data Found
[2025-08-10 15:40:42] warn: No Data Found
[2025-08-10 15:40:42] warn: No Data Found
[2025-08-10 15:40:43] warn: No Data Found
[2025-08-10 15:40:43] warn: No Data Found
[2025-08-10 15:40:45] warn: No Data Found
[2025-08-10 15:40:46] warn: No Data Found
[2025-08-10 15:40:47] warn: No Data Found
[2025-08-10 15:41:13] warn: No Data Found
[2025-08-10 15:41:13] warn: No Data Found
[2025-08-10 15:41:14] warn: No Data Found
[2025-08-10 15:41:15] warn: No Data Found
[2025-08-10 15:46:12] warn: No Data Found
[2025-08-10 15:46:13] warn: No Data Found
[2025-08-10 15:46:16] warn: No Data Found
[2025-08-10 15:46:16] warn: No Data Found
[2025-08-10 15:46:38] warn: No Data Found
[2025-08-10 15:46:39] warn: No Data Found
[2025-08-10 15:46:39] warn: No Data Found
[2025-08-10 15:46:40] warn: No Data Found
[2025-08-10 15:46:59] info: Filter: 
[2025-08-10 15:46:59] warn: No Data Found
[2025-08-10 15:47:00] warn: No Data Found
[2025-08-10 15:47:01] warn: No Data Found
[2025-08-10 15:47:03] warn: No Data Found
[2025-08-10 15:47:26] warn: No Data Found
[2025-08-10 15:47:26] warn: No Data Found
[2025-08-10 15:47:27] warn: No Data Found
[2025-08-10 15:47:28] warn: No Data Found
[2025-08-10 15:48:23] info: Filter: 
[2025-08-10 15:48:23] warn: No Data Found
[2025-08-10 15:48:23] warn: No Data Found
[2025-08-10 15:48:24] warn: No Data Found
[2025-08-10 15:48:25] warn: No Data Found
[2025-08-10 15:51:52] warn: No Data Found
[2025-08-10 15:51:53] warn: No Data Found
[2025-08-10 15:51:53] info: Filter: 
[2025-08-10 15:51:55] warn: No Data Found
[2025-08-10 15:51:56] warn: No Data Found
[2025-08-10 15:51:57] error: 
Invalid `prisma.service.findFirst()` invocation:


Can't reach database server at `switchback.proxy.rlwy.net:51374`

Please make sure your database server is running at `switchback.proxy.rlwy.net:51374`.
{
  "code": "P1001",
  "meta": {
    "modelName": "Service",
    "database_host": "switchback.proxy.rlwy.net",
    "database_port": 51374
  },
  "clientVersion": "6.9.0",
  "name": "PrismaClientKnownRequestError",
  "stack": "PrismaClientKnownRequestError: \nInvalid `prisma.service.findFirst()` invocation:\n\n\nCan't reach database server at `switchback.proxy.rlwy.net:51374`\n\nPlease make sure your database server is running at `switchback.proxy.rlwy.net:51374`.\n    at Zn.handleRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Zn.handleAndLogRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async Promise.all (index 1)\n    at async getConstantsDB (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\constants\\constants.repository.ts:6:26)\n    at async ConstantsService.getConstants (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\constants\\constants.services.ts:24:20)\n    at async getConstants (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\api\\controllers\\constants\\constants.controller.ts:9:22)"
}
[2025-08-10 15:55:23] warn: No Data Found
[2025-08-10 15:55:24] warn: No Data Found
[2025-08-10 15:55:24] info: Filter: 
[2025-08-10 15:55:25] warn: No Data Found
[2025-08-10 15:55:27] warn: No Data Found
[2025-08-10 15:58:31] info: Filter: 
[2025-08-10 15:58:32] warn: No Data Found
[2025-08-10 15:58:33] warn: No Data Found
[2025-08-10 15:58:34] warn: No Data Found
[2025-08-10 15:58:35] warn: No Data Found
[2025-08-10 16:01:46] warn: No Data Found
[2025-08-10 16:01:48] warn: No Data Found
[2025-08-10 16:01:50] warn: No Data Found
[2025-08-10 16:05:03] warn: No Data Found
[2025-08-10 16:05:04] warn: No Data Found
[2025-08-10 16:05:05] warn: No Data Found
[2025-08-10 16:05:05] warn: No Data Found
[2025-08-11 11:11:16] info: Filter: 
[2025-08-11 11:11:34] warn: No Data Found
[2025-08-11 11:11:34] warn: No Data Found
[2025-08-11 11:11:35] warn: No Data Found
[2025-08-11 11:11:37] warn: No Data Found
[2025-08-11 11:13:10] warn: No Data Found
[2025-08-11 11:13:10] warn: No Data Found
[2025-08-11 11:13:11] warn: No Data Found
[2025-08-11 11:13:11] warn: No Data Found
[2025-08-11 11:13:12] warn: No Data Found
[2025-08-11 11:13:14] warn: No Data Found
[2025-08-11 11:13:26] warn: No Data Found
[2025-08-11 11:13:26] warn: No Data Found
[2025-08-11 11:13:27] warn: No Data Found
[2025-08-11 11:13:27] warn: No Data Found
[2025-08-11 11:13:28] warn: No Data Found
[2025-08-11 11:13:29] warn: No Data Found
[2025-08-11 11:13:29] warn: No Data Found
[2025-08-11 11:13:31] warn: No Data Found
[2025-08-11 11:13:56] info: Filter: 
[2025-08-11 11:14:14] info: Order 15 marked as cancelled in database
[2025-08-11 11:14:23] info: Filter: 
[2025-08-11 11:14:23] warn: No Data Found
[2025-08-11 11:14:24] warn: No Data Found
[2025-08-11 11:14:24] warn: Printer 192.168.1.123 not connected
[2025-08-11 11:14:24] warn: No Data Found
[2025-08-11 11:14:26] warn: No Data Found
[2025-08-11 11:15:12] info: Filter: 
[2025-08-11 11:16:13] warn: No Data Found
[2025-08-11 11:16:14] warn: No Data Found
[2025-08-11 11:16:15] warn: No Data Found
[2025-08-11 11:16:16] warn: No Data Found
[2025-08-11 11:16:16] warn: No Data Found
[2025-08-11 11:16:17] warn: No Data Found
[2025-08-11 11:16:19] warn: No Data Found
[2025-08-11 11:16:35] info: Filter: 
[2025-08-11 11:17:13] debug: DB: transaction
{
  "phase": "START"
}
[2025-08-11 11:17:14] debug: DB: menuItem.findFirst
{
  "itemCount": 1
}
[2025-08-11 11:17:15] info: PERF: Fetch menu items completed in 223ms
{
  "count": 1,
  "menuItems": [
    {
      "id": 3,
      "title": "Mixed Pizza"
    }
  ]
}
[2025-08-11 11:17:15] debug: Calculating old item quantities
[2025-08-11 11:17:15] debug: Old quantities calculated
{
  "oldItemMap": {
    "mixed pizza": 2
  }
}
[2025-08-11 11:17:15] debug: Calculating new item quantities
[2025-08-11 11:17:15] debug: New quantities calculated
{
  "newItemMap": {
    "mixed pizza": 1
  }
}
[2025-08-11 11:17:15] info: Processing supply updates
{
  "itemNames": [
    "mixed pizza"
  ]
}
[2025-08-11 11:17:15] debug: Processing item supply update
{
  "itemName": "mixed pizza",
  "oldQty": 2,
  "newQty": 1,
  "qtyDifference": -1
}
[2025-08-11 11:17:15] debug: Found supplies for item
{
  "itemName": "mixed pizza",
  "suppliesCount": 2,
  "supplies": [
    {
      "id": 2,
      "remainingQuantity": 276
    },
    {
      "id": 3,
      "remainingQuantity": 5
    }
  ]
}
[2025-08-11 11:17:15] debug: Starting supply deduction process
{
  "itemName": "mixed pizza",
  "totalToDeduct": -1
}
[2025-08-11 11:17:15] info: PERF: Supply updates completed in 207ms
[2025-08-11 11:17:15] debug: DB: order.update
{
  "orderId": 16
}
[2025-08-11 11:17:17] info: undefined
[2025-08-11 11:17:17] info: PERF: updateOrder completed in 4756ms
{
  "orderId": 16,
  "finalItemsCount": 1,
  "newInvoiceId": 18,
  "newInvoiceVersion": 2
}
[2025-08-11 11:17:17] debug: updateOrder - EXIT
{
  "success": true
}
[2025-08-11 11:17:25] info: Filter: 
[2025-08-11 11:17:55] info: Filter: 
[2025-08-11 11:18:11] debug: DB: transaction
{
  "phase": "START"
}
[2025-08-11 11:18:11] debug: DB: menuItem.findFirst
{
  "itemCount": 7
}
[2025-08-11 11:18:12] info: PERF: Fetch menu items completed in 793ms
{
  "count": 7,
  "menuItems": [
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    }
  ]
}
[2025-08-11 11:18:12] debug: Calculating old item quantities
[2025-08-11 11:18:12] debug: Old quantities calculated
{
  "oldItemMap": {
    "mixed pizza": 1
  }
}
[2025-08-11 11:18:12] debug: Calculating new item quantities
[2025-08-11 11:18:12] debug: New quantities calculated
{
  "newItemMap": {
    "mixed pizza": 7
  }
}
[2025-08-11 11:18:12] info: Processing supply updates
{
  "itemNames": [
    "mixed pizza"
  ]
}
[2025-08-11 11:18:12] debug: Processing item supply update
{
  "itemName": "mixed pizza",
  "oldQty": 1,
  "newQty": 7,
  "qtyDifference": 6
}
[2025-08-11 11:18:12] debug: Found supplies for item
{
  "itemName": "mixed pizza",
  "suppliesCount": 2,
  "supplies": [
    {
      "id": 2,
      "remainingQuantity": 276
    },
    {
      "id": 3,
      "remainingQuantity": 5
    }
  ]
}
[2025-08-11 11:18:12] debug: Starting supply deduction process
{
  "itemName": "mixed pizza",
  "totalToDeduct": 6
}
[2025-08-11 11:18:12] debug: Processing individual supply
{
  "supplyId": 2,
  "currentRemaining": 276,
  "remainingToDeduct": 6,
  "calculatedNewQty": 270
}
[2025-08-11 11:18:12] debug: Supply fully satisfied deduction
{
  "supplyId": 2,
  "oldQuantity": 276,
  "newQuantity": 270,
  "deducted": 6
}
[2025-08-11 11:18:12] info: PERF: Supply updates completed in 227ms
[2025-08-11 11:18:12] debug: DB: order.update
{
  "orderId": 16
}
[2025-08-11 11:18:14] info: undefined
[2025-08-11 11:18:14] info: PERF: updateOrder completed in 3494ms
{
  "orderId": 16,
  "finalItemsCount": 7,
  "newInvoiceId": 19,
  "newInvoiceVersion": 3
}
[2025-08-11 11:18:14] debug: updateOrder - EXIT
{
  "success": true
}
[2025-08-11 11:18:23] info: Filter: 
[2025-08-11 11:19:01] debug: DB: transaction
{
  "phase": "START"
}
[2025-08-11 11:19:02] debug: DB: menuItem.findFirst
{
  "itemCount": 4
}
[2025-08-11 11:19:03] info: PERF: Fetch menu items completed in 570ms
{
  "count": 4,
  "menuItems": [
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    }
  ]
}
[2025-08-11 11:19:03] debug: Calculating old item quantities
[2025-08-11 11:19:03] debug: Old quantities calculated
{
  "oldItemMap": {
    "mixed pizza": 7
  }
}
[2025-08-11 11:19:03] debug: Calculating new item quantities
[2025-08-11 11:19:03] debug: New quantities calculated
{
  "newItemMap": {
    "mixed pizza": 4
  }
}
[2025-08-11 11:19:03] info: Processing supply updates
{
  "itemNames": [
    "mixed pizza"
  ]
}
[2025-08-11 11:19:03] debug: Processing item supply update
{
  "itemName": "mixed pizza",
  "oldQty": 7,
  "newQty": 4,
  "qtyDifference": -3
}
[2025-08-11 11:19:03] debug: Found supplies for item
{
  "itemName": "mixed pizza",
  "suppliesCount": 2,
  "supplies": [
    {
      "id": 2,
      "remainingQuantity": 270
    },
    {
      "id": 3,
      "remainingQuantity": 8
    }
  ]
}
[2025-08-11 11:19:03] debug: Starting supply deduction process
{
  "itemName": "mixed pizza",
  "totalToDeduct": -3
}
[2025-08-11 11:19:03] info: PERF: Supply updates completed in 221ms
[2025-08-11 11:19:03] debug: DB: order.update
{
  "orderId": 16
}
[2025-08-11 11:19:06] info: undefined
[2025-08-11 11:19:06] error: updateOrder failed
{
  "error": "\nInvalid `prisma.invoice.create()` invocation:\n\n\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting.",
  "stack": "PrismaClientKnownRequestError: \nInvalid `prisma.invoice.create()` invocation:\n\n\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting.\n    at Zn.handleRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Zn.handleAndLogRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\order\\order.services.ts:668:25\n    at async Proxy._transactionWithCallback (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:8139)\n    at async OrderServices.updateOrder (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\order\\order.services.ts:272:28)\n    at async updateOrder (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\api\\controllers\\table\\order.controller.ts:71:22)",
  "requestId": 16,
  "requestData": {
    "tableId": 8,
    "items": [
      {
        "id": 54,
        "menuItemId": 3,
        "price": 9000,
        "quantity": 1,
        "notes": ""
      },
      {
        "id": 55,
        "menuItemId": 3,
        "price": 9000,
        "quantity": 1,
        "notes": ""
      },
      {
        "id": 56,
        "menuItemId": 3,
        "price": 9000,
        "quantity": 1,
        "notes": ""
      },
      {
        "id": 49,
        "menuItemId": 3,
        "price": 9000,
        "quantity": 1,
        "notes": ""
      }
    ],
    "userId": 1,
    "reason": "Testing",
    "invoiceId": 19
  },
  "executionTime": 5626
}
[2025-08-11 11:19:06] debug: updateOrder - EXIT
{
  "success": false
}
[2025-08-11 11:19:18] debug: DB: transaction
{
  "phase": "START"
}
[2025-08-11 11:19:18] debug: DB: menuItem.findFirst
{
  "itemCount": 4
}
[2025-08-11 11:19:19] info: PERF: Fetch menu items completed in 526ms
{
  "count": 4,
  "menuItems": [
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    },
    {
      "id": 3,
      "title": "Mixed Pizza"
    }
  ]
}
[2025-08-11 11:19:19] debug: Calculating old item quantities
[2025-08-11 11:19:19] debug: Old quantities calculated
{
  "oldItemMap": {
    "mixed pizza": 7
  }
}
[2025-08-11 11:19:19] debug: Calculating new item quantities
[2025-08-11 11:19:19] debug: New quantities calculated
{
  "newItemMap": {
    "mixed pizza": 4
  }
}
[2025-08-11 11:19:19] info: Processing supply updates
{
  "itemNames": [
    "mixed pizza"
  ]
}
[2025-08-11 11:19:19] debug: Processing item supply update
{
  "itemName": "mixed pizza",
  "oldQty": 7,
  "newQty": 4,
  "qtyDifference": -3
}
[2025-08-11 11:19:19] debug: Found supplies for item
{
  "itemName": "mixed pizza",
  "suppliesCount": 2,
  "supplies": [
    {
      "id": 2,
      "remainingQuantity": 270
    },
    {
      "id": 3,
      "remainingQuantity": 8
    }
  ]
}
[2025-08-11 11:19:19] debug: Starting supply deduction process
{
  "itemName": "mixed pizza",
  "totalToDeduct": -3
}
[2025-08-11 11:19:19] info: PERF: Supply updates completed in 227ms
[2025-08-11 11:19:19] debug: DB: order.update
{
  "orderId": 16
}
[2025-08-11 11:19:21] info: undefined
[2025-08-11 11:19:22] info: PERF: updateOrder completed in 4547ms
{
  "orderId": 16,
  "finalItemsCount": 4,
  "newInvoiceId": 20,
  "newInvoiceVersion": 4
}
[2025-08-11 11:19:22] debug: updateOrder - EXIT
{
  "success": true
}
[2025-08-11 11:19:32] info: Filter: 
[2025-08-11 11:21:55] warn: No Data Found
[2025-08-11 11:21:55] warn: No Data Found
[2025-08-11 11:21:56] warn: No Data Found
[2025-08-11 11:21:58] warn: No Data Found
[2025-08-11 11:26:20] warn: No Data Found
[2025-08-11 11:26:21] warn: No Data Found
[2025-08-11 11:26:22] warn: No Data Found
[2025-08-11 11:26:23] warn: No Data Found
[2025-08-11 11:30:56] warn: No Data Found
[2025-08-11 11:31:00] info: Filter: 
[2025-08-11 11:31:00] warn: No Data Found
[2025-08-11 11:31:02] warn: No Data Found
[2025-08-11 11:54:07] info: Filter: 
[2025-08-11 11:54:07] warn: No Data Found
[2025-08-11 11:54:07] warn: No Data Found
[2025-08-11 11:54:08] warn: No Data Found
[2025-08-11 11:54:27] info: Filter: 
[2025-08-11 11:54:28] warn: No Data Found
[2025-08-11 11:54:28] warn: No Data Found
[2025-08-11 11:54:29] warn: No Data Found
[2025-08-11 11:55:26] warn: No Data Found
[2025-08-11 11:55:28] warn: No Data Found
[2025-08-11 11:55:30] info: Filter: 
[2025-08-11 11:55:30] warn: No Data Found
[2025-08-11 11:55:31] warn: No Data Found
[2025-08-11 11:55:31] warn: No Data Found
[2025-08-11 11:55:33] warn: No Data Found
[2025-08-11 11:55:37] warn: No Data Found
[2025-08-11 11:55:39] warn: No Data Found
[2025-08-11 11:56:58] warn: No Data Found
[2025-08-11 11:56:58] warn: No Data Found
[2025-08-11 11:56:59] warn: No Data Found
[2025-08-11 11:57:00] warn: No Data Found
[2025-08-11 11:57:01] warn: No Data Found
[2025-08-11 11:57:05] warn: No Data Found
[2025-08-11 11:57:06] warn: No Data Found
[2025-08-11 12:02:06] warn: No Data Found
[2025-08-11 12:02:10] info: Filter: 
[2025-08-11 12:02:10] warn: No Data Found
[2025-08-11 12:02:11] warn: No Data Found
[2025-08-11 12:02:11] warn: No Data Found
[2025-08-11 12:02:13] warn: No Data Found
[2025-08-11 12:32:31] info: Filter: 
[2025-08-11 12:32:44] warn: No Data Found
[2025-08-11 12:32:44] warn: No Data Found
[2025-08-11 12:32:44] warn: No Data Found
[2025-08-11 12:32:46] warn: No Data Found
[2025-08-11 12:33:03] warn: No Data Found
[2025-08-11 12:33:03] warn: No Data Found
[2025-08-11 12:33:04] warn: No Data Found
[2025-08-11 12:33:05] warn: No Data Found
[2025-08-11 12:33:05] warn: No Data Found
[2025-08-11 12:33:07] warn: No Data Found
[2025-08-11 12:34:57] warn: No Data Found
[2025-08-11 12:34:58] warn: No Data Found
[2025-08-11 12:34:59] warn: No Data Found
[2025-08-11 12:35:00] warn: No Data Found
[2025-08-12 15:56:57] warn: Customers Not Found
[2025-08-12 15:57:06] warn: Customers Not Found
[2025-08-12 15:57:24] warn: Customers Not Found
[2025-08-12 15:57:41] warn: Customers Not Found
[2025-08-12 15:57:48] warn: Customers Not Found
[2025-08-12 15:57:52] warn: Customers Not Found
[2025-08-12 16:05:50] error: Get Customer Payments:  
Invalid `prisma.customerPayment.findMany()` invocation:

{
  where: {
    createdAt: {},
    isLatestVersion: true,
    ~~~~~~~~~~~~~~~
    paymentMethod: "PAYMENT",
?   AND?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],
?   OR?: CustomerPaymentWhereInput[],
?   NOT?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],
?   id?: IntFilter | Int,
?   customerInfoId?: IntFilter | Int,
?   invoiceId?: IntNullableFilter | Int | Null,
?   invoiceNumber?: StringNullableFilter | String | Null,
?   amount?: IntFilter | Int,
?   note?: StringNullableFilter | String | Null,
?   paymentDate?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   customerInfo?: CustomerInfoScalarRelationFilter | CustomerInfoWhereInput,
?   invoice?: InvoiceNullableScalarRelationFilter | InvoiceWhereInput | Null
  },
  include: {
    customerInfo: {
      select: {
        id: true,
        name: true,
        phoneNumber: true,
        email: true,
        debt: true,
        initialDebt: true
      }
    },
    invoice: {
      select: {
        total: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 20,
  skip: 0
}

Unknown argument `isLatestVersion`. Available options are marked with ?.
{
  "name": "PrismaClientValidationError",
  "clientVersion": "6.9.0",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.customerPayment.findMany()` invocation:\n\n{\n  where: {\n    createdAt: {},\n    isLatestVersion: true,\n    ~~~~~~~~~~~~~~~\n    paymentMethod: \"PAYMENT\",\n?   AND?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],\n?   OR?: CustomerPaymentWhereInput[],\n?   NOT?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],\n?   id?: IntFilter | Int,\n?   customerInfoId?: IntFilter | Int,\n?   invoiceId?: IntNullableFilter | Int | Null,\n?   invoiceNumber?: StringNullableFilter | String | Null,\n?   amount?: IntFilter | Int,\n?   note?: StringNullableFilter | String | Null,\n?   paymentDate?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   customerInfo?: CustomerInfoScalarRelationFilter | CustomerInfoWhereInput,\n?   invoice?: InvoiceNullableScalarRelationFilter | InvoiceWhereInput | Null\n  },\n  include: {\n    customerInfo: {\n      select: {\n        id: true,\n        name: true,\n        phoneNumber: true,\n        email: true,\n        debt: true,\n        initialDebt: true\n      }\n    },\n    invoice: {\n      select: {\n        total: true\n      }\n    }\n  },\n  orderBy: {\n    createdAt: \"desc\"\n  },\n  take: 20,\n  skip: 0\n}\n\nUnknown argument `isLatestVersion`. Available options are marked with ?.\n    at kn (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async CRMServices.getCustomerPayments (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\settings\\crm\\crm.services.ts:960:24)\n    at async getCustomerPayments (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\api\\controllers\\settings\\crm\\crm.controller.ts:222:22)"
}
[2025-08-12 16:05:56] error: Get Customer Payments:  
Invalid `prisma.customerPayment.findMany()` invocation:

{
  where: {
    createdAt: {},
    isLatestVersion: true,
    ~~~~~~~~~~~~~~~
    paymentMethod: "PAYMENT",
?   AND?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],
?   OR?: CustomerPaymentWhereInput[],
?   NOT?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],
?   id?: IntFilter | Int,
?   customerInfoId?: IntFilter | Int,
?   invoiceId?: IntNullableFilter | Int | Null,
?   invoiceNumber?: StringNullableFilter | String | Null,
?   amount?: IntFilter | Int,
?   note?: StringNullableFilter | String | Null,
?   paymentDate?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   customerInfo?: CustomerInfoScalarRelationFilter | CustomerInfoWhereInput,
?   invoice?: InvoiceNullableScalarRelationFilter | InvoiceWhereInput | Null
  },
  include: {
    customerInfo: {
      select: {
        id: true,
        name: true,
        phoneNumber: true,
        email: true,
        debt: true,
        initialDebt: true
      }
    },
    invoice: {
      select: {
        total: true
      }
    }
  },
  orderBy: {
    createdAt: "desc"
  },
  take: 20,
  skip: 0
}

Unknown argument `isLatestVersion`. Available options are marked with ?.
{
  "name": "PrismaClientValidationError",
  "clientVersion": "6.9.0",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.customerPayment.findMany()` invocation:\n\n{\n  where: {\n    createdAt: {},\n    isLatestVersion: true,\n    ~~~~~~~~~~~~~~~\n    paymentMethod: \"PAYMENT\",\n?   AND?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],\n?   OR?: CustomerPaymentWhereInput[],\n?   NOT?: CustomerPaymentWhereInput | CustomerPaymentWhereInput[],\n?   id?: IntFilter | Int,\n?   customerInfoId?: IntFilter | Int,\n?   invoiceId?: IntNullableFilter | Int | Null,\n?   invoiceNumber?: StringNullableFilter | String | Null,\n?   amount?: IntFilter | Int,\n?   note?: StringNullableFilter | String | Null,\n?   paymentDate?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   customerInfo?: CustomerInfoScalarRelationFilter | CustomerInfoWhereInput,\n?   invoice?: InvoiceNullableScalarRelationFilter | InvoiceWhereInput | Null\n  },\n  include: {\n    customerInfo: {\n      select: {\n        id: true,\n        name: true,\n        phoneNumber: true,\n        email: true,\n        debt: true,\n        initialDebt: true\n      }\n    },\n    invoice: {\n      select: {\n        total: true\n      }\n    }\n  },\n  orderBy: {\n    createdAt: \"desc\"\n  },\n  take: 20,\n  skip: 0\n}\n\nUnknown argument `isLatestVersion`. Available options are marked with ?.\n    at kn (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async CRMServices.getCustomerPayments (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\domain\\settings\\crm\\crm.services.ts:960:24)\n    at async getCustomerPayments (D:\\Programing\\WorkFolders\\restaurant-pos\\backend\\src\\api\\controllers\\settings\\crm\\crm.controller.ts:222:22)"
}
