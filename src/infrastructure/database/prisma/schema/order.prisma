model Order {
    id      Int  @id @default(autoincrement())
    tableId Int?
    userId  Int

    table   Table?       @relation(fields: [tableId], references: [id])
    user    User         @relation(fields: [userId], references: [id])
    items   OrderItem[]
    Invoice InvoiceRef[]

    createdAt         DateTime           @default(now())
    updatedAt         DateTime           @updatedAt
    DeletedOrderItems DeletedOrderItem[]

    @@index([tableId, userId])
}

model OrderItem {
    id         Int     @id @default(autoincrement())
    orderId    Int
    menuItemId Int
    quantity   Int     @default(1)
    price      Float // snapshot price
    notes      String?

    order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
    menuItem  MenuItem @relation(fields: [menuItemId], references: [id])
    sortOrder Int      @default(0)

    createdAt DateTime @default(now())

    @@index([orderId, menuItemId, quantity])
}

model DeletedOrderItem {
    id         Int     @id @default(autoincrement())
    orderId    Int
    menuItemId Int
    quantity   Int     @default(1)
    price      Float // snapshot price
    notes      String?
    reason     String

    invoiceId Int
    invoice   Invoice @relation(fields: [invoiceId], references: [id])
    sortOrder Int     @default(0)

    order    Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
    menuItem MenuItem @relation(fields: [menuItemId], references: [id])

    createdAt DateTime @default(now())

    @@index([orderId, menuItemId, quantity])
}

model OrderPrintQueue {
    id            Int         @id @default(autoincrement())
    orderId       Int
    printerId     Int
    printerIp     String
    status        PrintStatus @default(PENDING)
    printType     PrintType   @default(ORDER_UPDATE)
    
    // Change tracking
    addedItems    Json?       // Array of added items with details
    deletedItems  Json?       // Array of deleted items with details  
    updatedItems  Json?       // Array of updated items with old/new quantities
    
    // Order context
    tableName     String?
    userName      String?
    orderNumber   Int?
    
    // Timestamps
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    printedAt     DateTime?

    @@index([orderId, printerId])
    @@index([status, createdAt])
}

enum PrintStatus {
    PENDING
    PRINTING
    COMPLETED
    FAILED
    CANCELLED
}

enum PrintType {
    NEW_ORDER
    ORDER_UPDATE
    ORDER_CANCELLATION
}
